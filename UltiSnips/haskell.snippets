snippet if "if clause"
if $1 then $2 else $3
endsnippet

snippet let "let clause"
let $1
in $0
endsnippet

snippet grd  "guard"
| $1 = $2
endsnippet

snippet oth "otherwise"
otherwise
endsnippet

snippet :: "function"
:: ${2:$3 =>} $4
endsnippet

snippet fd "function field"
$1 ->
endsnippet

snippet langderive "add additional derive things"
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveFunctor #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE DeriveFoldable #-}
endsnippet

snippet langrank "addes forall. statements" b
{-# LANGUAGE RankNTypes #-}
endsnippet

snippet langgad "adds GADT" b
{-# LANGUAGE GADTs #-}
endsnippet
snippet langfam "adds type families" b
{-# LANGUAGE TypeFamilies #-}
endsnippet
